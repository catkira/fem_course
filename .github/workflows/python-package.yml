name: CI

on: [push]

jobs:
  lint_and_test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          sudo apt install -y libblas-dev liblapack-dev # needed for pip install petsc
          sudo apt install -y libopenmpi-dev
          export PETSC_CONFIGURE_OPTIONS="--with-openmp --with-mpi=0 --with-shared-libraries=1 --with-mumps-serial=1 --download-mumps --download-openblas --download-openblas-commit=origin/develop --download-metis --download-slepc --with-debugging=0 --with-scalar-type=real --with-x=0 COPTFLAGS=-O3 CXXOPTFLAGS=-O3 FOPTFLAGS=-O3"
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with pylint
        run: |
          pylint --exit-zero *.py | tee pylint.txt
          score=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' pylint.txt)
          echo "Pylint score was $score"
          mkdir badge
          anybadge --value=$score --file=badge/pylint.svg pylint
          # stop the build if there are Python syntax errors or undefined names
          #flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          #flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: upload badge
        uses: actions/upload-artifact@v3
        with:
          name: badge
          path: "badge/pylint.svg"
      - name: Run tests
        run: |
          python3 run_examples.py

  deploy_badge:
    needs: lint_and_test

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        with:
          name: badge
          path: .
      - uses: actions/configure-pages@v1
      - name: Deploy to GitHub Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: '.'
      - id: deployment
        uses: actions/deploy-pages@master
